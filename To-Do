Important:
- Add validations to logics - Oleg + Aviad
- Change all dals to PagingAndSortingRepository - Aviad
- Find how to validate file type - Aviad
- Add cache to "get all" functions of basic parameters - Oleg
- Find out how to create a full list with fitting thickness

To Do Later:
- Should all double variables be "List" or separate items in DTO? (Currently uncertain in Joint)
- Add "@RequestHeader(value = "Authorization") String token" and validate user type in any add, update and delete function on controller
- Change hash function to Entities which are "Set" in other entities
- Ensure comments include line breaks
- For all validations which are "isExist" but not mandatory field - Find alternative to throwing error
- To decide Cascade types

Done:
- Get list of links (ManyToMany). Oleg to decide "Main" for each - Aviad
- Modify DTO constructors, per example in entities by Aviad - Oleg
- Create Dal, Logic, Controller to all Entities - Aviad
- Add error handling (ErrorBean DTO, ErrorType Enum, Error handler class, ApplicationError class)
- Read about Cascade types and orphanRemoval = true to determine each cascade - Oleg + Aviad
